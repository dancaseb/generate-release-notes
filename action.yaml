name: 'Generate release notes'
description: 'Action used to generate release notes and create PR in the docs repo'
inputs:
  token:  
    description: 'github token'
    default: ${{ github.token }}
  docs-repo:
    description: 'docs repository (in format owner/repo)'
    required: true
  base-branch:
    description: 'branch to create PR against'
    required: true
    # in the future, master will be default value
  allow-automerge:
    description: 'allow automatic merge of PR'
    type: boolean
    default: false
  release-notes-path:
    description: 'path to release notes file (including file name)'
    default: releases/release-notes.md
runs:
  using: "composite"
  steps:
    - name: Validate required inputs
      run: |
        [[ "${{ inputs.docs-repo }}" ]] || { echo "docs-repo input is empty" ; exit 1; }
      shell: bash
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: ${{github.repository}}
        fetch-depth: 2
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: ${{inputs.docs-repo}}
        ref: ${{inputs.base-branch}}
        token: ${{inputs.token}}
        repository: ${{inputs.docs-repo}}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: generate release notes
      id: generate-release-notes
      run: |
        pip install GitPython
        # create file if it does not exist. Parent folder must exist!
        if [ ! -f ${{inputs.docs-repo}}/${{inputs.release-notes-path}} ]; then
          echo "release-notes file does not exist. Creating empty file now..."
          touch ${{inputs.docs-repo}}/${{inputs.release-notes-path}}
        fi
        # run script to generate release notes
        python ${{github.action_path}}/create_release_notes.py --source_repo_path ${{github.workspace}}/${{github.repository}} --release_notes_path ${{github.workspace}}/${{inputs.docs-repo}}/${{inputs.release-notes-path}}
      shell: bash
    - name: create PR
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{inputs.token}}
        path: ${{inputs.docs-repo}}
        commit-message: 'generated release note'
        branch: new-release-notes/preview
        title: '[Auto PR] Generated release notes'
        delete-branch: true
        base: ${{inputs.base-branch}}
    # Temporarily disabled for testing
    # - name: automatic merge
    #   if: ${{inputs.allow-automerge == 'true'}}
    #   env:
    #     GH_TOKEN: ${{inputs.token}}
    #   run: |
    #     gh pr merge new-release-notes/preview --auto --delete-branch --rebase --repo ${{inputs.docs-repo}}
    #   shell: bash
