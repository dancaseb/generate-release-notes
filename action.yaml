name: 'Generate release notes'
description: 'action to generate release notes'
inputs:
  token:  
    description: 'Github token'
    required: true
  source-repo:
    description: 'Source repository'
    required: true
  docs-repo:
    description: 'Docs repository'
    required: true
  base-branch:
    description: 'branch to create PR against'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: ${{inputs.source-repo}}
        fetch-depth: 0
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: ${{inputs.docs-repo}}
        ref: master
        token: ${{inputs.token}}
        repository: ${{inputs.docs-repo}}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10' # install the python version needed
    - name: run script
      run: |
        pip install GitPython
        cp ${{inputs.docs-repo}}/release-notes.md ${{inputs.source-repo}}/release-notes.md
        cp create_release_notes.py ${{inputs.source-repo}}/create_release_notes.py
        cd ${{inputs.source-repo}}
        python create_release_notes.py
        cp release-notes.md ../../${{inputs.docs-repo}}
        echo "copied release notes to docs"
      shell: bash
    - name: create PR
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{inputs.token}}
        path: ${{inputs.docs-repo}}
        commit-message: 'generated release note'
        branch: new-release-notes/preview
        title: '[Auto PR] Generated release notes'
        delete-branch: true
        base: ${{inputs.base-branch}}
    - name: automatic merge
      env:
        GH_TOKEN: ${{inputs.token}}
      run: |
        gh pr merge new-release-notes/preview --auto --delete-branch --rebase --repo ${{inputs.docs-repo}}
      shell: bash
